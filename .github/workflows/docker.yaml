name: Docker
on:
  push:
    branches:
      - master
      - "**eahw-**"
      - "**EAHW-**"

jobs:
  build-docker-image:
    runs-on: ubuntu-20.04
    env:
      QUAY_REGISTRY: quay.io/sewerynmi
      QUAY_REPO: expressdroneapp
    steps:
      - uses: actions/checkout@v2

      - name: Get Image Tags
        id: image-tags
        run: |
          if [ "$GITHUB_REF_NAME" = "master" ]; then
            echo "image_tag=latest" >> $GITHUB_ENV
          fi
          if [[ $GITHUB_REF_NAME =~ (eahw-[0-9]*|EAHW-[0-9]*) ]] && TAG=${match/#E/E}${BASH_REMATCH/#E/E}; then
            TAG_UPPERCASE=$(echo "$TAG" | tr '[:lower:]' '[:upper:]')
            echo "image_tag=${TAG_UPPERCASE}" >> $GITHUB_ENV
          fi

      # - name: Build Image
      #   id: build-image
      #   uses: redhat-actions/buildah-build@v2
      #   with:
      #     image: ${{ env.QUAY_REPO }}
      #     tags: ${{ env.image_tag }}
      #     containerfiles: |
      #       ./Dockerfile

      # - name: Push image to Quay
      #   id: push-to-quay
      #   uses: redhat-actions/push-to-registry@v2
      #   with:
      #     image: ${{ steps.build-image.outputs.image }}
      #     tags: ${{ steps.build-image.outputs.tags }}
      #     registry: ${{ env.QUAY_REGISTRY}}
      #     username: ${{ secrets.QUAY_ROBOT_NAME }}
      #     password: ${{ secrets.QUAY_ROBOT_TOKEN }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"

  build-multiarch-dockerfile:
    name: Build multi-architecture image
    env:
      IMAGE_NAME: expressdroneapp
      DOCKER_REGISTRY: quay.io
      DOCKER_IMAGE: sewerynmi/expressdroneapp
      DOCKER_TARGET_PLATFORM: linux/arm/v7
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64, arm64]

    steps:
      - name: Checkout the code
        uses: actions/checkout@v1

      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@v1
        with:
          username: ${{ secrets.QUAY_ROBOT_NAME }}
          password: ${{ secrets.QUAY_ROBOT_TOKEN }}
          registry: ${{ env.DOCKER_REGISTRY }}

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
      - name: Buildah Action
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.DOCKER_IMAGE }}
          tags: latest
          arch: ${{ matrix.arch }}
          build-args: ARCH=${{ matrix.arch }}
          containerfiles: |
            ./Dockerfile
      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: latest
          registry: quay.io/awesome

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
